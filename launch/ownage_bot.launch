<launch>
  <arg name="simulation" default="false"/>
  <arg name="manual" default="false"/>
  <arg name="scenario" default="blocks_world"/>

  <arg name="avatar_ids" default="[]"/>
  
  <param name="simulation" type="bool" value="$(arg simulation)"/>
  <param name="manual" type="bool" value="$(arg manual)"/>
    
  <group ns="ownage_bot">
    <!-- Avatars are specific objects which represent owners -->
    <rosparam param="avatar_ids" subst_value="true">
    $(arg avatar_ids)</rosparam>
    
    <!-- Load area parameters -->
    <rosparam command="load" param="areas"
	      file="$(find ownage_bot)/params/areas.yaml" />

    <!-- Load category parameters -->
    <rosparam param="categories">
      ["block", "mug", "pen", "laptop", "wallet", "charger", "wrapper"]
    </rosparam>

    <!-- Load color parameters -->
    <rosparam param="colors">
        red : [[160, 70, 10], [10, 166, 66]]
        green : [[30, 80, 20], [100, 246, 96]]
        blue : [[80, 120, 70], [130, 216, 146]]
    </rosparam>
       
    <!-- Load simulation and scenario parameters -->
    <group if="$(arg simulation)">
      <!-- Reload area parameters for simulated world -->
      <rosparam command="load" param="areas"
	      file="$(find ownage_bot)/params/sim_areas.yaml" />
      <rosparam command="load" param="blocks_world"
	      file="$(find ownage_bot)/params/blocks_world.yaml" />
    </group>
    
    <!-- Object tracker node -->
    <node pkg="ownage_bot" type="object_tracker.py"
	  output="screen" name="object_tracker">
      <!-- How often (in seconds) objects get updated -->
      <param name="latency" type="double" value="0.2" />
    </node>

    <!-- World simulator, provides simulated environment and actions -->
    <node pkg="ownage_bot" type="world_simulator.py"
      	  name="world_simulator" output="screen" if="$(arg simulation)">
      <param name="scenario" type="string" value="$(arg scenario)"/>
      <param name="ground_lvl" type="double" value="0.0"/>
      <param name="arm_lvl" type="double" value="0.3"/>
    </node>
    
    <!-- Task manager node -->
    <node pkg="ownage_bot" type="task_manager.py"
          name="task_manager" output="screen" unless="$(arg manual)">
    </node>

    <!-- Rule manager node -->
    <node pkg="ownage_bot" type="rule_manager.py"
          name="rule_manager" output="screen" unless="$(arg manual)">
    </node>
    
    <!-- Dialog manager node -->
    <node pkg="ownage_bot" type="dialog_manager.py"
          name="dialog_manager" output="screen" unless="$(arg manual)">
    </node>

    <!-- Command prompt node -->
    <node pkg="ownage_bot" type="command_prompt.py"
          name="command_prompt" output="screen" unless="$(arg manual)"
	  launch-prefix="gnome-terminal --command">
    </node>
  </group>

  <!-- Use real-world action and perception if not in simulation -->
  <group unless="$(arg simulation)">
    <!-- Provides actions on Baxter's arms -->
    <node pkg="ownage_bot" type="action_provider"
      	  name="action_provider" output="screen">
        <remap from="/markers/left"  to="/aruco_marker_publisher/markers"/>
        <remap from="/markers/right" to="/aruco_marker_publisher/markers"/>
    </node>
    
    <!-- Runs ARuCo and displays camera image -->
    <include file="$(find ownage_bot)/launch/aruco_marker_publisher.launch"/>
  </group>
</launch>

